name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - name: Deploy Appgit
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        password: ${{ secrets.SSH_PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        username: ${{ secrets.SSH_USERNAME }}
        source: "./"
        target: "/var/www/html/runapp"
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3
    - name: Configure and make the app live
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        password: ${{ secrets.SSH_PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        username: ${{ secrets.SSH_USER }}
        # /scp-action@masterERNAME }}
        script: |
          set -e
          echo "Deploying application ..."
          cd /var/www/html
          (php artisan down) || true
          composer install --no-interaction --prefer-dist --optimize-autoloader
          php artisan migrate --force
          sudo chmod 777 -R /var/www/html/bootstrap/cache/
          sudo chmod 777 -R /var/www/html/storage/
          php artisan optimize
          echo "" | sudo service php8.3-fpm reload
          php artisan up
          echo "Application deployed!"


    # - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
    #   with:
    #     php-version: '8.0'
    # - uses: actions/checkout@v4

    # - name: Copy .env
    #   run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    # - name: Install Dependencies
    #   run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # - name: Generate key
    #   run: php artisan key:generate
    # - name: Directory Permissions
    #   run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
    #   run: |
    #     mkdir -p database
    #     touch database/database.sqlite
    # - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
    #   env:
    #     DB_CONNECTION: sqlite
    #     DB_DATABASE: database/database.sqlite
    #   run: php artisan test
